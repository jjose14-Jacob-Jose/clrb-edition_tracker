name: Main build and deploy to Azure

# Trigger, the Action when a release is created.
on:
  release:
    types:
      - created

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
#      Checkout 'main' branch.
      - name: Checkout code
        uses: actions/checkout@v2

#      Setting JDK for Maven build.
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

#  Maven clean install.
      - name: Build with Maven
        run: mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}:/${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_REPOSITORY_NAME }}:${{ github.event.release.tag_name }}

#      #  Print Docker image's name.
#      - name: Display image tag
#        run: echo ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ github.event.release.tag_name }}
#
#      - name: Install Azure CLI
#        run: |
#          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
#          az --version
#
#      - name: Azure Login
#        uses: azure/actions/login@v1
#        with:
#          creds: |
#            {
#              "clientId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.appId }}",
#              "clientSecret": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.password }}",
#              "tenantId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.tenant }}",
#              "subscriptionId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.subscriptionId }}"
#            }
#
#      - name: Set up Azure CLI
#        uses: azure/CLI@v1
#        with:
#          inlineScript: |
#            az --version
#            az account show
#
#      - name: Update Azure WebApp tag
#        uses: azure/cli@v1
#        with:
#          inlineScript: az webapp config container set --name ${{ secrets.AZURE_WEB_APP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --docker-custom-image-name ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ steps.generate-tag.outputs.tag }}
#
#      - name: Deploy to Azure WebApp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: ${{ secrets.AZURE_WEB_APP_NAME }}
#          images: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ steps.generate-tag.outputs.tag }}