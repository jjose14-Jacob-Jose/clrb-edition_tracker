name: Main build and deploy to Azure

# Uncomment following to run the GitHub Action when a push is made to 'main'.
#on:
#  push:
#    branches:
#      - main

# Trigger, the Action when a release is created.
on:
  release:
    types:
      - created

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_FTPS_USERNAME }}
          password: ${{ secrets.ACR_FTPS_PASSWORD }}

#  Print Docker image's name.
      - name: Display image tag
        run: echo ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ github.event.release.tag_name }}

#  Push Docker image to Azure.
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ github.event.release.tag_name }}

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az --version

      - name: Azure Login
        uses: azure/actions/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.appId }}",
              "clientSecret": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.password }}",
              "tenantId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.tenant }}",
              "subscriptionId": "${{ secrets.AZURE_CREDENTIALS_SERVICE_PRINCIPAL_GHA.subscriptionId }}"
            }

      - name: Set up Azure CLI
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az --version
            az account show

      - name: Update Azure WebApp tag
        uses: azure/cli@v1
        with:
          inlineScript: az webapp config container set --name ${{ secrets.AZURE_WEB_APP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --docker-custom-image-name ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ steps.generate-tag.outputs.tag }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEB_APP_NAME }}
          images: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/clrb-edition-tracker-image:${{ steps.generate-tag.outputs.tag }}